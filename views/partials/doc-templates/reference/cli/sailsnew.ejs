<h1 id="sails-new">sails new</h1>
<p><code>sails new &lt;path/to/folder&gt;</code> creates a new Sails project in a folder called <strong>folder</strong>.</p>
<p><code>sails new .</code> create a new Sails project in current folder.</p>
<h5 id="options-" permalink="options">Options:</h5>
<ul>
<li><code>--appName</code> Application name (will be used as <code>name</code> in <code>package.json</code>). By default it is the same as the specified <code>folder</code>.</li>
<li><code>--no-linker</code> Disable automatic asset linking in your view and static HTML files (the relevant grunt tasks will not be created)</li>
<li><code>--no-frontend</code> Disable the generation of the <code>assets</code> folder and files. Views will be created with hardcopied linked resources  off of sailsjs.com.</li>
<li><code>--template=[template language]</code> Use a different template language than the default (e.g. <code>jade</code>).  Requires that a views generator for that language (e.g. <code>sails-generate-views-jade</code>) be installed in your global node path (e.g. <code>~/node_modules/</code> works).</li>
</ul>
<blockquote>
<p><code>sails new</code> is really just a special <a href="/documentation/concepts/extending-sails/Generators">generator</a> which runs <a href="http://github.com/balderdashy/sails-generate-new" target="_blank"><code>sails-generate-new</code></a>.  In other words, running <code>sails new foo</code> is an alias for running <code>sails generate new foo</code>, and like any Sails generator, the actual generator module which gets run can be overridden in your global <code>~/.sailsrc</code> file.</p>
</blockquote>
<p><docmeta name="displayName" value="sails new"></docmeta></p>
<docmeta name="pageType" value="command">
</docmeta>