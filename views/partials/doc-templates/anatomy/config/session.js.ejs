<h1 id="config-session-js">config/session.js</h1>
<h3 id="purpose" permalink="purpose">Purpose</h3>
<p>This file contains information that tells Sails where to store your sessions.</p>
<p>Sails session integration leans heavily on the great work already done by Express, but also unifies socket.io with the Connect session store. It uses Connect&apos;s cookie parser to normalize configuration differences between Express and socket.io and hooks into Sails&apos; middleware interpreter to allow you to access and auto-save to <code>req.session</code> with Socket.io the same way you would with Express.</p>
<p>This is where you would go to configure a different session store like Redis or Mongo.  In this file you will find commented examples of what that configuration should look like.</p>
<p>This file also contains your &apos;Session Secret&apos; that is generated by Sails when you create your app.  Do not change or remove this unless you really know what you are doing.</p>
<docmeta name="displayName" value="session.js">

<pre><code class="nohighlight">/**
 * Session Configuration
 * (sails.config.session)
 *
 * Sails session integration leans heavily on the great work already done by
 * Express, but also unifies Socket.io with the Connect session store. It uses
 * Connect&apos;s cookie parser to normalize configuration differences between Express
 * and Socket.io and hooks into Sails&apos; middleware interpreter to allow you to access
 * and auto-save to `req.session` with Socket.io the same way you would with Express.
 *
 * For more information on configuring the session, check out:
 * http://sailsjs.com/documentation/reference/configuration/sails-config-session
 */

module.exports.session = {

  // Session secret is automatically generated when your new app is created
  // Replace at your own risk in production-- you will invalidate the cookies of your users,
  // forcing them to log in again.
  secret: &apos;cdf93c72c05f104f6183613e2f8262c2&apos;,


  // Set the session cookie expire time
  // The maxAge is set by milliseconds, the example below is for 24 hours
  //
  // cookie: {
  //   maxAge: 24 * 60 * 60 * 1000
  // }


  // In production, uncomment the following lines to set up a shared redis session store
  // that can be shared across multiple Sails.js servers
  // adapter: &apos;redis&apos;,
  //
  // The following values are optional, if no options are set a redis instance running
  // on localhost is expected.
  // Read more about options at: https://github.com/visionmedia/connect-redis
  //
  // host: &apos;localhost&apos;,
  // port: 6379,
  // ttl: &lt;redis session TTL in seconds&gt;,
  // db: 0,
  // pass: &lt;redis auth password&gt;
  // prefix: &apos;sess:&apos;


  // Uncomment the following lines to use your Mongo adapter as a session store
  // adapter: &apos;mongo&apos;,
  //
  // host: &apos;localhost&apos;,
  // port: 27017,
  // db: &apos;sails&apos;,
  // collection: &apos;sessions&apos;,
  //
  // Optional Values:
  //
  // # Note: url will override other connection settings
  // url: &apos;mongodb://user:pass@host:port/database/collection&apos;,
  //
  // username: &apos;&apos;,
  // password: &apos;&apos;,
  // auto_reconnect: false,
  // ssl: false,
  // stringify: true

};
</code></pre><!-- __LANG=%%__ -->
</docmeta>