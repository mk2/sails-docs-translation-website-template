<h1 id="assets-templates">assets/templates</h1>
<h3 id="purpose" permalink="purpose">Purpose</h3>
<p>Client-side HTML templates are important prerequisites for certain types of modern, rich client applications built for browsers; particularly <a href="https://en.wikipedia.org/wiki/Single-page_application" target="_blank">SPAs</a>. To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require that you load templates client-side; completely separate from your traditional <a href="/documentation/concepts/views">server-side views</a>.  Out of the box, new Sails apps support the best of both worlds.</p>
<p>Whether or not you use client-side templates in your app and where you put them is, of course, completely up to you.  But for the sake of convention, new apps generated with Sails include a <code>templates/</code> folder for you by default.</p>
<h3 id="how-do-i-use-these-templates-" permalink="how-do-i-use-these-templates">How do I use these templates?</h3>
<p>By default, your Gruntfile is configured to automatically load and precompile
client-side JST templates in your <code>assets/templates</code> folder, then
include them in your <code>layout.ejs</code> view automatically (between TEMPLATES and TEMPLATES END).</p>
<pre><code>&lt;!--TEMPLATES--&gt;

&lt;!--TEMPLATES END--&gt;
</code></pre><p>This exposes your HTML templates as precompiled functions on <code>window.JST</code> for use from your client-side JavaScript.</p>
<p>To customize this behavior to fit your needs, just edit your Gruntfile.
For example, here are a few things you could do:</p>
<ul>
<li>Import templates from other directories</li>
<li>Use a different template engine (handlebars, jade, dust, etc)</li>
<li>Internationalize your client-side templates using a server-side stringfile before they&apos;re served.</li>
</ul>
<p>For more information, check out the conceptual documentation on the <a href="/documentation/concepts/assets/default-tasks">default Grunt tasks</a> that make up Sails&apos; asset pipeline.</p>
<docmeta name="displayName" value="templates">

</docmeta>